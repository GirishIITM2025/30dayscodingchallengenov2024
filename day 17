Given two strings s1 and s2, return true if s2 contains a 
permutation
 of s1, or false otherwise.

In other words, return true if one of s1's permutations is the substring of s2.



  

from collections import Counter

class Solution:
    def checkInclusion(self, s1, s2):
        len1, len2 = len(s1), len(s2)
        if len1 > len2:
            return False

        count1 = Counter(s1)
        count2 = Counter(s2[:len1])

        if count1 == count2:
            return True

        for i in range(len1, len2):
            count2[s2[i]] += 1
            count2[s2[i - len1]] -= 1
            if count2[s2[i - len1]] == 0:
                del count2[s2[i - len1]]
            if count1 == count2:
                return True

        return False
